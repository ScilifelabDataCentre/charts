apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-trigger-store
data:
  workflow: |-
    apiVersion: argoproj.io/v1alpha1
    kind: Workflow
    metadata:
      generateName: deploy-model-
      namespace: {{ .Release.Namespace }}
    
    spec:
      entrypoint: deploy-wf
      serviceAccountName: argo-events-sa
      imagePullSecrets:
        - name: registry-docker-registry-secret
      arguments:
        parameters:
        - name: context-bucket
          value: contexts
        - name: context-file
          value: context.tar.gz
        - name: model-bucket
          value: models
        - name: model-file
          value: model.tar.gz
        - name: model-name
          value: test-model
        - name: model-version
          value: v0
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
      templates:
      - name: check-input
        container:
          image: alpine:latest
          command: [echo]
          args: ["{{ "{{" }}workflow.parameters.context-bucket{{ "}}" }}",
                 "{{ "{{" }}workflow.parameters.context-file{{ "}}" }}",
                 "{{ "{{" }}workflow.parameters.model-bucket{{ "}}" }}",
                 "{{ "{{" }}workflow.parameters.model-file{{ "}}" }}",
                 "{{ "{{" }}workflow.parameters.model-name{{ "}}" }}",
                 "{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"]
      - name: check-output
        inputs:
          parameters:
          - name: build-file
          - name: build-file-bucket
        container:
          image: alpine:latest
          command: [echo]
          args: ["{{ "{{" }}inputs.parameters.build-file{{ "}}" }}",
                 "{{ "{{" }}inputs.parameters.build-file-bucket{{ "}}" }}"]
      - name: package-model
        container:
          image: {{.Values.registry}}/package-model:latest
          env:
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-project-ae-secret
                  key: accesskey
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-project-ae-secret
                  key: secretkey
            - name: AWS_REGION
              value: us-east-1
            - name: S3_ENDPOINT
              value: {{ .Release.Name }}-minio:9000
            - name: CONTEXT_BUCKET
              value: "{{ "{{" }}workflow.parameters.context-bucket{{ "}}" }}"
            - name: CONTEXT_FILE
              value: "{{ "{{" }}workflow.parameters.context-file{{ "}}" }}"
            - name: MODEL_BUCKET
              value: "{{ "{{" }}workflow.parameters.model-bucket{{ "}}" }}"
            - name: MODEL_FILE
              value: "{{ "{{" }}workflow.parameters.model-file{{ "}}" }}"    
        outputs:
          parameters:
          - name: build-file
            valueFrom:
              path: deploy_file.txt
          - name: build-file-bucket
            valueFrom:
              path: deploy_bucket.txt
      - name: build-deployment
        inputs:
          parameters:
          - name: build-file
          - name: build-file-bucket

        container:
          image: gcr.io/kaniko-project/executor:latest

          args: [ "--dockerfile=Dockerfile",
                  "--context=s3://{{ "{{" }}inputs.parameters.build-file-bucket{{ "}}" }}/{{ "{{" }}inputs.parameters.build-file{{ "}}" }}",
                  "--destination={{ .Values.registry }}/{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"]
          volumeMounts:
            - name: kaniko-secret
              mountPath: /kaniko/.docker
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-project-ae-secret
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-project-ae-secret
                  key: secretkey
            - name: AWS_REGION
              value: us-east-1
            - name: S3_ENDPOINT
              value: http://{{ .Release.Name }}-minio:9000 
            - name: S3_FORCE_PATH_STYLE
              value: "true"
          resources:
            limits:
              memory: "5Gi"
              # cpu: "2"
      - name: deploy
        resource:
          action: apply
          failureCondition: status.failed > 3
          manifest: | 
            apiVersion: openfaas.com/v1 
            kind: Function
            metadata:
                name: "{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
                namespace: {{.Values.serving-namespace}}
            spec:
                name: "{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
                image: "{{.Values.registry}}/{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
      - name: deploy-wf
        steps:
        - - name: check-input
            template: check-input
        - - name: package-model
            template: package-model
        - - name: check-output
            template: check-output
            arguments:
              parameters:
              - name: build-file
                value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file{{ "}}" }}"
              - name: build-file-bucket
                value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file-bucket{{ "}}" }}"
        - - name: build-deployment
            template: build-deployment
            arguments:
              parameters:
              - name: build-file
                value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file{{ "}}" }}"
              - name: build-file-bucket
                value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file-bucket{{ "}}" }}"
        - - name: deploy
            template: deploy


