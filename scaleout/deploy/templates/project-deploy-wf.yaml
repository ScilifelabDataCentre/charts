apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
    name: {{ .Values.project_slug }}-{{ .Values.model_name }}-{{ .Values.model_version }}-deploy
    namespace: {{ .Release.Namespace }}

spec:
  entrypoint: deploy-wf
  serviceAccountName: argo-events-sa
  imagePullSecrets:
    - name: {{ .Values.imagePullSecret }}
  arguments:
    parameters:
    - name: context-bucket
      value: {{ .Values.context_bucket }}
    - name: context-file
      value: {{ .Values.context_file }}
    - name: model-bucket
      value: {{ .Values.model_bucket }}
    - name: model-file
      value: {{ .Values.model_file }}
    - name: model-name
      value: {{ .Values.model_name }}
    - name: model-version
      value: {{ .Values.model_version }}
  volumes:
    - name: kaniko-secret
      secret:
        secretName: {{ .Values.imagePullSecret }}
        items:
          - key: .dockerconfigjson
            path: config.json
    - name: workdir
      emptyDir: {}
  templates:
  - name: package-model
    container:
      image: scaleoutsystems/package-model:latest
      volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
      env:
        - name: S3_ACCESS_KEY_ID
          value: {{ .Values.minio_access }}
        - name: S3_SECRET_ACCESS_KEY
          value: {{ .Values.minio_secret }}
        - name: AWS_REGION
          value: us-east-1
        - name: S3_ENDPOINT
          value: {{ .Values.project_slug }}-minio:9000
        - name: CONTEXT_BUCKET
          value: "{{ "{{" }}workflow.parameters.context-bucket{{ "}}" }}"
        - name: CONTEXT_FILE
          value: "{{ "{{" }}workflow.parameters.context-file{{ "}}" }}"
        - name: MODEL_BUCKET
          value: "{{ "{{" }}workflow.parameters.model-bucket{{ "}}" }}"
        - name: MODEL_FILE
          value: "{{ "{{" }}workflow.parameters.model-file{{ "}}" }}"    
    outputs:
      parameters:
      - name: build-file
        valueFrom:
          path: /mnt/vol/deploy_file.txt
      - name: build-file-bucket
        valueFrom:
          path: /mnt/vol/deploy_bucket.txt
  - name: build-deployment
    inputs:
      parameters:
      - name: build-file
      - name: build-file-bucket

    container:
        image: gcr.io/kaniko-project/executor:latest

        args: [ "--dockerfile=Dockerfile",
                {{ if not .Values.registry.secure }}
                "--insecure",       
                "--insecure-registry",
                "{{ .Values.registry.host }}",
                {{ end }}
                "--context=s3://{{ "{{" }}inputs.parameters.build-file-bucket{{ "}}" }}/{{ "{{" }}inputs.parameters.build-file{{ "}}" }}",
                "--destination={{ .Values.registry.host }}/{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"]
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker
        env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.minio_access }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.minio_secret }}
            - name: AWS_REGION
              value: us-east-1
            - name: S3_ENDPOINT
              value: http://{{ .Values.project_slug }}-minio:9000 
            - name: S3_FORCE_PATH_STYLE
              value: "true"
        resources:
          limits:
            memory: "5Gi"
            # cpu: "2"
  - name: deploy
    resource:
        action: apply
        failureCondition: status.failed > 3
        manifest: | 
            apiVersion: openfaas.com/v1 
            kind: Function
            metadata:
                name: "{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
                namespace: {{.Values.serving_namespace}}
            spec:
                name: "{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
                image: "registry.{{ .Values.global.domain }}/{{ "{{" }}workflow.parameters.model-name{{ "}}" }}-{{ "{{" }}workflow.parameters.model-version{{ "}}" }}"
  - name: deploy-wf
    steps:
    - - name: package-model
        template: package-model
    - - name: build-deployment
        template: build-deployment
        arguments:
            parameters:
            - name: build-file
              value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file{{ "}}" }}"
            - name: build-file-bucket
              value: "{{ "{{" }}steps.package-model.outputs.parameters.build-file-bucket{{ "}}" }}"
    - - name: deploy
        template: deploy
