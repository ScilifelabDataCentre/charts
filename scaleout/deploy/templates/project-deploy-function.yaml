apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appname }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8501"
      labels:
        app: {{ .Values.appname }}
        project: {{ .Values.project.slug }}
        type: deployment
    spec:
      volumes:
      - name: secret-vol
        secret:
          secretName: serve-secret
          optional: true
      - name: gatekeeper-config
        configMap:
          name: {{ .Release.Name }}-gatekeeper-config
      containers:
      - name: gatekeeper
        image: keycloak/keycloak-gatekeeper:latest #quay.io/gambol99/keycloak-proxy:latest
        imagePullPolicy: Always
        args:
          - --config=/etc/secrets/gatekeeper.yaml
        ports:
          - containerPort: 9090
        volumeMounts:
        - name: gatekeeper-config
          mountPath: /etc/secrets/
      - name: serve
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}m
            memory: {{ .Values.resources.limits.memory }}Mi
          requests:
            cpu: {{ .Values.resources.requests.cpu }}m
            memory: {{ .Values.resources.requests.memory }}Mi
        volumeMounts:
        - name: secret-vol
          mountPath: license
          readOnly: true
        env:
          - name: S3_ACCESS_KEY_ID
            value: {{ .Values.minio.access_key }}
          - name: S3_SECRET_ACCESS_KEY
            value: {{ .Values.minio.secret_key }}
          - name: AWS_REGION
            value: us-east-1
          - name: S3_ENDPOINT
            value: http://{{ .Values.project.slug }}-minio:9000
          - name: MODEL_BUCKET
            value: {{ .Values.model.bucket }}
          - name: MODEL_FILE
            value: {{ .Values.model.file }}
        command: ["/bin/bash"]
        args: ["-c", "./mc config host add projminio $S3_ENDPOINT $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;./mc cp projminio/$MODEL_BUCKET/$MODEL_FILE model.tar.gz;tar xvf model.tar.gz;[[ -f requirements.txt ]] && pip3 install -r requirements.txt;./deploy.sh"]
        image: {{ .Values.context.image }}
        ports:
        - containerPort: 8501