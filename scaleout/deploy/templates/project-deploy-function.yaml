apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}-{{ .Values.deployment.version }}
  labels:
    app: {{ .Values.deployment.name }}-{{ .Values.deployment.version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}-{{ .Values.deployment.version }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8501"
      labels:
        app: {{ .Values.deployment.name }}-{{ .Values.deployment.version }}
    spec:
      containers:
      - name: {{ .Values.deployment.name }}-{{ .Values.deployment.version }}
        env:
          - name: S3_ACCESS_KEY_ID
            value: {{ .Values.minio.access_key }}
          - name: S3_SECRET_ACCESS_KEY
            value: {{ .Values.minio.secret_key }}
          - name: AWS_REGION
            value: us-east-1
          - name: S3_ENDPOINT
            value: {{ .Values.project.slug }}-minio:9000
          - name: MODEL_BUCKET
            value: {{ .Values.model.bucket }}
          - name: MODEL_FILE
            value: {{ .Values.model.file }}
        command:
        - ["/bin/bash"]
        args:
        ["-c", "./mc config host add projminio $S3_ENDPOINT $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;
          ./mc cp $MODEL_BUCKET/$MODEL_FILE model.tar.gz;
          tar xvf model.tar.gz;
          [[ -f requirements.txt ]] && pip3 install -r requirements.txt;
          uwsgi --http 0.0.0.0:8501 --wsgi-file func.py --callable app_dispatch"]
        
        image: {{ .Values.context.image }}
        ports:
        - containerPort: 8501